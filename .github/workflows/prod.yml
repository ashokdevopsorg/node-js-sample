name: Prod

on:
  workflow_dispatch:
    inputs:
      owner:
        description: 'Owner Name'
        required: true
      repo:
        description: 'Repository Name'
        required: true
      run-id:
        description: 'Run ID'
        required: true
      artifact-name:
        description: 'Artifact Name'
        required: true

jobs:
  deploy:
    runs-on: windows-latest
    steps:
      - name: Download Artifact
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Download Artifact
        shell: pwsh
        run: |
          $owner = $env:INPUT_OWNER
          $repo = $env:INPUT_REPO
          $runId = $env:INPUT_RUN_ID
          $artifactName = $env:INPUT_ARTIFACT_NAME
          
          # Hardcoded token value
          $token = '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'

          $url = "https://api.github.com/repos/$owner/$repo/actions/runs/$runId/artifacts"

          $headers = @{
            "Authorization" = "Bearer $token"
            "Accept" = "application/vnd.github.v3+json"
          }

          $response = Invoke-RestMethod -Uri $url -Headers $headers
          $artifact = $response.artifacts | Where-Object { $_.name -eq $artifactName }

          if (-not $artifact) {
            Write-Error "Artifact with name '$artifactName' not found."
            exit 1
          }

          $artifactId = $artifact.id
          $artifactUrl = "https://api.github.com/repos/$owner/$repo/actions/artifacts/$artifactId/zip"

          Invoke-WebRequest -Uri $artifactUrl -Headers $headers -OutFile artifact.zip
        env:
          INPUT_OWNER: ${{ github.event.inputs.owner }}
          INPUT_REPO: ${{ github.event.inputs.repo }}
          INPUT_RUN_ID: ${{ github.event.inputs.run-id }}
          INPUT_ARTIFACT_NAME: ${{ github.event.inputs.artifact-name }}
